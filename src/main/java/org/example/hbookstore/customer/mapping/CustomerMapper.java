package org.example.hbookstore.customer.mapping;

import org.example.hbookstore.customer.api.dto.CreateCustomerRequest;
import org.example.hbookstore.customer.api.dto.CustomerResponse;
import org.example.hbookstore.customer.api.dto.UpdateCustomerRequest;
import org.example.hbookstore.customer.domain.Customer;
import org.example.hbookstore.customer.domain.enums.CustomerStatus;
import org.springframework.stereotype.Component;

import java.time.Instant;

@Component
public class CustomerMapper {

    public Customer toEntity(CreateCustomerRequest request) {
        return new Customer(
                null, // ID will be generated by the database
                request.firstName(),
                request.lastName(),
                request.email(),
                request.phoneNumber(),
                CustomerStatus.ACTIVE,
                request.category(),
                Instant.now(),
                Instant.now()
        );
    }

    public Customer updateEntity(Customer customer, UpdateCustomerRequest request) {
        if (request.firstName() != null) {
            customer.setFirstName(request.firstName());
        }
        if (request.lastName() != null) {
            customer.setLastName(request.lastName());
        }
        if (request.email() != null) {
            customer.setEmail(request.email());
        }
        if (request.phoneNumber() != null) {
            customer.setPhoneNumber(request.phoneNumber());
        }
        if (request.category() != null) {
            customer.setCategory(request.category());
        }
        if (request.status() != null) {
            customer.setStatus(request.status());
        }

        customer.setUpdatedAt(Instant.now());
        return customer;
    }

    public CustomerResponse toResponse(Customer customer) {
        return new CustomerResponse(
                customer.getId(),
                customer.getFirstName(),
                customer.getLastName(),
                customer.getEmail(),
                customer.getPhoneNumber(),
                customer.getCategory(),
                customer.getStatus(),
                customer.getCreatedAt(),
                customer.getUpdatedAt(),
                customer.getUserId()
        );
    }
}
