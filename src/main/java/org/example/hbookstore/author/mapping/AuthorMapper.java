package org.example.hbookstore.author.mapping;

import org.example.hbookstore.author.api.dto.AuthorResponse;
import org.example.hbookstore.author.api.dto.CreateAuthorRequest;
import org.example.hbookstore.author.api.dto.UpdateAuthorRequest;
import org.example.hbookstore.author.domain.Author;
import org.springframework.stereotype.Component;

import java.time.LocalDateTime;

@Component
public class AuthorMapper {

    public Author toEntity(CreateAuthorRequest request) {
        return new  Author(
                null, // ID will be generated by the database
                request.firstName(),
                request.lastName(),
                request.biography(),
                request.birthDate(),
                request.nationality(),
                LocalDateTime.now(),
                LocalDateTime.now()
        );
    }

    public Author updateEntity(Author author, UpdateAuthorRequest request) {
        if (request.firstName() != null) {
            author.setFirstName(request.firstName());
        }
        if (request.lastName() != null) {
            author.setLastName(request.lastName());
        }
        if (request.biography() != null) {
            author.setBiography(request.biography());
        }
        if (request.birthDate() != null) {
            author.setBirthDate(request.birthDate());
        }
        if (request.nationality() != null) {
            author.setNationality(request.nationality());
        }
        author.setUpdatedAt(LocalDateTime.now());
        return author;
    }

    public AuthorResponse toResponse(Author author) {
        return new AuthorResponse(
                author.getId(),
                author.getFirstName(),
                author.getLastName(),
                author.getBiography(),
                author.getBirthDate(),
                author.getNationality(),
                author.getCreatedAt(),
                author.getUpdatedAt()
        );
    }
}
